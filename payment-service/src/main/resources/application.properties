# Your application configuration properties go in here
# Outgoing stream
%prod.mp.messaging.outgoing.payments.bootstrap.servers=my-cluster-kafka-external-bootstrap.kafka:9094
%dev.mp.messaging.outgoing.payments.bootstrap.servers=broker:29092
mp.messaging.outgoing.payments.connector=smallrye-kafka
mp.messaging.outgoing.payments.topic=payments
mp.messaging.outgoing.payments.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.payments.key.serializer=org.apache.kafka.common.serialization.StringSerializer

# Incoming stream (unneeded when using Knative events)
mp.messaging.incoming.orders.connector=smallrye-kafka
mp.messaging.incoming.orders.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.orders.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
%prod.mp.messaging.incoming.orders.bootstrap.servers=my-cluster-kafka-external-bootstrap.kafka:9094
%dev.mp.messaging.incoming.orders.bootstrap.servers=broker:29092
mp.messaging.incoming.orders.group.id=payment-order-service
mp.messaging.incoming.orders.auto.offset.reset=earliest
mp.messaging.incoming.orders.enable.auto.commit=true
mp.messaging.incoming.orders.request.timeout.ms=30000

quarkus.container-image.build=true
quarkus.container-image.group=rudiansen
quarkus.container-image.name=payment-service

#%prod.quarkus.s2i.base-jvm-image=registry.access.redhat.com/ubi8/openjdk-11

#%prod.quarkus.kubernetes-client.trust-certs=true
#%prod.quarkus.container-image.build=true
#%prod.quarkus.kubernetes.deploy=true
#%prod.quarkus.kubernetes.deployment-target=openshift
#%prod.quarkus.openshift.expose=true
#%prod.quarkus.openshift.labels.app.openshift.io/runtime=quarkus